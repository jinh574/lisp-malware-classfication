(reset-kb)

(disable-slot-checking)       ; (Temporarily disable while rebuilding KB state)
                              ; (Will be restored to original value by final SETQ statements)

(disable-classification)      ; (Temporarily disable while rebuilding KB state)
                              ; (Will be restored to original value by final SETQ statements)

(disable-installing-inverses) ; (Temporarily disable while rebuilding KB state)
                              ; (Will be switched back on by (enable-installing-inverses) at the end)

;;; ----------- TAXONOMY -----------

;;; (Concept Number is a build-in class)

(파일 
	has (superclasses (행동))
	(실행 (*생성 *삭제 *정보수정 *바이너리수정 *권한수정 *읽기))
	(경로 (nil))
	(이름 (nil)))

(프로세스
	has (superclasses (행동))
	(실행 (*생성 *종료 *일시정지 *시작))
	(경로 (nil))
	(이름 (nil)))

(레지스트리
	has (superclasses (행동))
	(실행 (*생성 *삭제 *값수정 *권한수정))
	(경로 (nil))
	(이름 (nil)))

(서비스
	has (superclasses (행동))
	(실행 (*등록 *제거 *시작 *종료))
	(경로 (nil))
	(이름 (nil)))

(소켓
	has (superclasses (행동))
	(실행 (*열기 *닫기 *전송))
	(포트 (nil))
	(대상 (nil)))

(후킹
	has (superclasses (행동))
	(실행 (*IAT *EAT *Inline))
	(점프대상 (nil))
	(후킹대상 (nil)))

(코드
	has (superclasses (행동))
	(실행 (*삽입 *암호화라이브러리))
	(대상 (nil)))

(부트
	has (superclasses (행동))
	(실행 (*MBR)))

(네트워크
	has (superclasses (행동))
	(실행 (*DNS *프록시 *NDIS)))

;;; ----------- CONTENTS -----------

(*ROOTKIT has
	(superclasses (악성코드))
	(판단조건 (
		(a 행동 with (모드 (*커널)))
		(a 프로세스1 with (실행 (*일시정지)))
		)
	)

	(결과 ((if (((allof ?x in (the all-classes of (the 판단조건 of Self)) where ((?x = 프로세스) or (?x = 레지스트리) or (?x = 서비스) or (?x = 파일) or (?x = 부트))) /= NIL) and ((allof ?x in (the 판단조건 of Self) where (((?x isa 행동)) and ((the 모드 of ?x) = *커널))) /= NIL)) then true else false )))
)

(*RANSOMEWARE has
	(superclasses (악성코드))
	(판단조건 (
		(a 파일 with (실행 (*바이너리수정)))
		(a 파일 with (실행 (*정보수정)))
		(a 소켓 with (실행 (*전송)))
		(a 코드 with (실행 (*암호화라이브러리))))
	)
	(임시 (
		(condFile == (allof ?x in (the 판단조건 of Self) where (((?x isa 파일) and ((the 실행 of ?x) = *바이너리수정)))))
		(condFile2 == (allof ?x in (the 판단조건 of Self) where (((?x isa 파일) and ((the 실행 of ?x) = *정보수정)))))
		(condSocket == (allof ?x in (the 판단조건 of Self) where (((?x isa 소켓) and ((the 실행 of ?x) = *전송)))))
		(condCode == (allof ?x in (the 판단조건 of Self) where (((?x isa 코드) and ((the 실행 of ?x) = *암호화라이브러리)))))
		)
	)
	(결과 ((if ((the 실행 of (the 임시 of Self)) = (:set *바이너리수정 *정보수정 *전송 *암호화라이브러리)) then true else false)))
)



(*KILLAV has
	(superclasses (악성코드))
	(판단조건 (
				(a 서비스 with (실행 (*종료)) (이름 (*v3engine.sys)))
				(a 후킹 with (후킹대상 (*v3update.exe)))
				(a 부트 with (실행 (*MBR))))
	)
	(임시 (
		(condService == (allof ?x in (the 판단조건 of Self) where ((?x isa 서비스) and ((the 실행 of ?x) = *종료) and ((the 이름 of ?x) = *v3engine.sys))))
		(condHooking == (allof ?x in (the 판단조건 of Self) where ((?x isa 후킹) and ((the 후킹대상 of ?x) = *v3update.exe))))
		(condBoot == (allof ?x in (the 판단조건 of Self) where ((?x isa 부트) and ((the 실행 of ?x) = *MBR))))
		)
	
	)
	(결과 ((if (((the 실행 of (the 임시 of Self)) /= NIL) or ((the 후킹대상 of (the 임시 of Self)) /= NIL) ) then true else false)))
)